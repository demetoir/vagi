version: "3.7"

services:
    mysql:
        container_name: ${MYSQL_PROD_CONTAINER_NAME}
        image: mysql
        ports:
            - ${MYSQL_PROD_PORT}:3306
        volumes:
            - ${DOCKER_VOLUMNS_PATH}/${MYSQL_PROD_CONTAINER_NAME}:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci  --log-bin-trust-function-creators=1
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_PROD_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_PROD_SCHEME}
            - MYSQL_USER=${MYSQL_PROD_USER}
            - MYSQL_PASSWORD=${MYSQL_PROD_PASSWORD}
        networks:
            - nginx.docker
        restart: always

    redis:
        container_name: ${REDIS_PROD_CONTAINER_NAME}
        image: redis
        ports:
            - ${REDIS_PROD_PORT}:6379
        volumes:
            - ${DOCKER_VOLUMNS_PATH}/${REDIS_PROD_CONTAINER_NAME}:/data
        networks:
            - nginx.docker
        restart: always

    express:
        container_name: ${EXPRESS_PROD_CONTAINER_NAME}
        build:
            context: ../
            dockerfile: ./docker/dockerfiles/node.prod.Dockerfile
        entrypoint: yarn pm2-runtime start ./build/express/index.js --watch
        ports:
            - ${EXPRESS_PROD_PORT}:${EXPRESS_PROD_PORT}
        volumes:
            - ../:/usr/src/app/
        environment:
            - NODE_ENV=production
            - IS_DOCKER_CONTAINER=true
        networks:
            - nginx.docker
        links:
            - mysql
            - redis
        depends_on:
            - mysql
            - redis

    graphql:
        container_name: ${GRAPHQL_YOGA_SERVER_PROD_CONTAINER_NAME}
        build:
            context: ../
            dockerfile: ./docker/dockerfiles/node.prod.Dockerfile
        entrypoint: yarn pm2-runtime start ./build/graphQL/app.js --watch
        ports:
            - ${GRAPHQL_YOGA_SERVER_PROD_PORT}:${GRAPHQL_YOGA_SERVER_PROD_PORT}
        volumes:
            - ../:/usr/src/app/
        environment:
            - NODE_ENV=production
            - IS_DOCKER_CONTAINER=true
        networks:
            - nginx.docker
        links:
            - mysql
            - redis
        depends_on:
            - mysql
            - redis

    socket:
        container_name: ${SOCKET_IO_SERVER_PROD_CONTAINER_NAME}
        build:
            context: ../
            dockerfile: ./docker/dockerfiles/node.prod.Dockerfile
        entrypoint: yarn pm2-runtime start ./build/socket_io_server/app.js --watch
        ports:
            - ${SOCKET_IO_SERVER_PROD_PORT}:${SOCKET_IO_SERVER_PROD_PORT}
        volumes:
            - ../:/usr/src/app/
        environment:
            - NODE_ENV=production
            - IS_DOCKER_CONTAINER=true
        networks:
            - nginx.docker
        links:
            - mysql
            - redis
        depends_on:
            - mysql
            - redis

    nginx:
        container_name: ${NGINX_PROD_CONTAINER_NAME}
        image: nginx
        tty: true
        stdin_open: true
        ports:
            - ${NGINX_PROD_EXPOSE_PORT}:80
        environment:
            - SERVER_HOST=${PROD_HOST}
        volumes:
            - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
        networks:
            - nginx.docker
        links:
            - express
            - graphql
            - socket
            - mysql
            - redis

networks:
    nginx.docker:
        driver: "bridge"
